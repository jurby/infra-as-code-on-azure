{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "automationAccountName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "securestring"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "automationPricingTier": "Free",
    "publicIPAddressName": "autodemo-ip",
    "nicName": "autodemo-nic",
    "vmName": "autodemo-vm",
    "vmSize": "Standard_B2s",
    "vnetName": "autodemo-net",
    "vnetAddressPrefix": "10.0.0.0/16",
    "subnetName": "autodemo-sub",
    "subnetAddressPrefix": "10.0.0.0/24",
    "windowsOSVersion": "2016-Datacenter",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
    "xWebAdministration": "https://devopsgallerystorage.blob.core.windows.net/packages/xwebadministration.1.20.0.nupkg",
    "configurationUrl": "https://mojedscsoubory.blob.core.windows.net/dsc/WindowsIISServerConfig.ps1",
    "configurationName": "WindowsIISServerConfig"
  },
  "resources": [
    {
      "type": "Microsoft.Automation/automationAccounts",
      "name": "[parameters('automationAccountName')]",
      "apiVersion": "2015-10-31",
      "location": "[parameters('location')]",
      "dependsOn": [],
      "tags": {},
      "properties": {
        "sku": {
          "name": "[variables('automationPricingTier')]"
        }
      }
    },
    {
        "name": "[concat(parameters('automationAccountName'), '/xWebAdministration')]",
        "type": "Microsoft.Automation/automationAccounts/modules",
        "apiVersion": "2015-10-31",
        "tags": {},
        "dependsOn": [
          "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
        ],
        "properties": {
          "contentLink": {
            "uri": "[variables('xWebAdministration')]"
          }
        }
    },
    {
        "name": "[concat(parameters('automationAccountName'), '/', variables('configurationName'))]",
        "type": "Microsoft.Automation/automationAccounts/configurations",
        "apiVersion": "2015-10-31",
        "location": "[parameters('location')]",
        "tags": {},
        "dependsOn": [
          "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
        ],
        "properties": {
          "logVerbose": "false",
          "description": "",
          "state": "Published",
          "Source": {
            "type": "uri",
            "Value": "[variables('configurationUrl')]"
          }
        }
    },
    {
        "name": "[concat(parameters('automationAccountName'), '/compilationJob01')]",
        "type": "Microsoft.Automation/automationAccounts/compilationjobs",
        "apiVersion": "2018-01-15",
        "location": "variables('location')]",
        "tags": {},
        "dependsOn": [
          "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
          "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'),'/Modules/xWebAdministration')]",
          "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'),'/Configurations/', variables('configurationName'))]"
        ],
        "properties": {
          "configuration": {
            "name": "[variables('configurationName')]"
          }
        }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
    },
    {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
    },
    {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "[variables('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          }
        }
    }
  ]
}
